alias http-server='/usr/bin/python -m SimpleHTTPServer'
alias ll='ls -alh'
alias gst='git status'
alias gco='git commit'
alias gch='git checkout'
alias ga='git add'
alias gd='git diff'
alias gb='git branch'
alias gbd='git branch -d'
alias gfp='git fetch && git pull'

alias be='bundle exec'
alias bi='bundle install'
alias bu='bundle update'

alias ssh-nas='ssh philipwindeyer@192.168.1.18'

alias dce='docker-compose exec'
alias dce-hotels-bash='docker-compose exec hotels bash'
alias dce-gatekeeper-bash='docker-compose exec gatekeeper bash'
alias dce-customer-notifications-bash='cd ~/workspaces/ted; docker-compose exec customer-notifications bash'
alias dce-bookings-api-bash='cd ~/workspaces/ted; docker-compose exec bookings-api bash'
alias docker-login='AWS_PROFILE=services ~/workspaces/ted/bin/login'
alias docker-customer-notifications='cd ~/workspaces/ted; /usr/local/bin/docker-compose up -d customer-notifications'
alias docker-bookings-api='cd ~/workspaces/ted; /usr/local/bin/docker-compose up -d bookings-api'
alias docker-platformdb='cd ~/workspaces/ted; /usr/local/bin/docker-compose up -d platformdb'
alias docker-platform-up='cd ~/workspaces/ted; AWS_PROFILE=nonprod bin/up -d'
alias docker-ubuntu='docker run -it ubuntu bash'
alias docker-nuke='read "doit?Are ya sure there buddy? Type YaASsS if so: " && [[ "$doit" == "YaASsS" ]] && docker container stop $(docker container ls -aq) && docker system prune -af --volumes && docker image prune -af'

alias self-service='yarn run start'
alias self-service-staging='yarn run start:staging'

# Requires 'with-readline'. Install via Homebrew; brew install with-readline
alias sftp='with-readline sftp'

# Terraform
alias terraform-init-with-upgrade='terraform init -upgrade'
alias tf="AWS_PROFILE=services terraform"
alias tfi="tf init -upgrade"
alias tfw="tf workspace"
alias tfp="tf plan"

alias weather='curl wttr.in'
alias fuck-yeah='fuck --yeah'

alias postgres-start='~/.asdf/installs/postgres/12.0/bin/pg_ctl -D ~/.asdf/installs/postgres/12.0/data -l logfile start'

alias aws-google-auth-services='aws-google-auth -k -d 28800 -p services'
alias aws-google-auth-nonprod='aws-google-auth -k -d 28800 -p nonprod'

alias rm-ds_store-files='find . -name '.DS_Store' -type f -delete'

# Work Utils
alias hammer-hnl='hammer book --location HNL --points 0 --voucher 0'

function work-platform-find-scheduled() {
  local job_id="$1"
  for i in {1..100}; do
    local url="https://staging-platform-scheduler.nonprod.jqdev.net/que/scheduled?page=$i"
    if curl -s $url | grep "$job_id" >/dev/null; then
      echo $url
      break
    fi
  done
}

# AWS SSM and Terraform access via work VPN
alias session-manager-plugin='HTTP_PROXY=http://production-vpn-proxy.internal_services:3128 /usr/local/sessionmanagerplugin/bin/session-manager-plugin'
alias aws='HTTPS_PROXY=http://production-vpn-proxy.internal_services:3128 aws'
alias awsm='HTTPS_PROXY=http://production-vpn-proxy.internal_services:3128 awsm'
alias terraform='GIT_SSH_COMMAND="ssh -F ~/.ssh/config.qh-github" terraform'
